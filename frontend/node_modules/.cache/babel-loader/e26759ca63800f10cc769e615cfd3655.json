{"ast":null,"code":"var _jsxFileName = \"/Users/kamrankhan/Desktop/proshop/frontend/src/screens/UserEditScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Form, Button } from 'react-bootstrap';\nimport { Link, useNavigate, useParams } from 'react-router-dom';\nimport Loader from '../Components/Loader';\nimport Messages from '../Components/Messages';\nimport { getUserDetails, updateUser } from '../actions/userAction';\nimport FormConatiner from '../Components/FormConatiner';\nimport { USER_UPDATE_RESET } from '../constants/userConstants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst UserEditScreen = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const params = useParams();\n  const userId = params.id;\n  const navigate = useNavigate();\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [isAdmin, setIsAdmin] = useState('');\n  const userDetails = useSelector(state => state.userDetails);\n  const {\n    loading,\n    error,\n    user\n  } = userDetails;\n  const userUpdate = useSelector(state => state.userUpdate);\n  const {\n    loading: loadingUpdate,\n    error: errorUpdate,\n    success: successUpdate\n  } = userUpdate;\n  useEffect(() => {\n    if (successUpdate) {\n      dispatch({\n        type: USER_UPDATE_RESET\n      });\n      navigate('/admin/userlist');\n    } else {\n      if (!user.name || user._id !== userId) {\n        dispatch(getUserDetails(userId));\n      } else {\n        setName(user.name);\n        setEmail(user.email);\n        setIsAdmin(user.isAdmin);\n      }\n    }\n  }, [dispatch, user, navigate, userId, successUpdate]);\n\n  const submitHandler = e => {\n    e.preventDefault();\n    dispatch(updateUser({\n      _id: userId,\n      name,\n      email,\n      isAdmin\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/admin/userlist\",\n      className: \"btn btn-dark my-3\",\n      children: \" Back \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(FormConatiner, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Edit User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), loadingUpdate && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 30\n      }, this), errorUpdate && /*#__PURE__*/_jsxDEV(Messages, {\n        variant: \"danger\",\n        children: errorUpdate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 29\n      }, this), loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 23\n      }, this) : error ? /*#__PURE__*/_jsxDEV(Messages, {\n        variant: \"danger\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: submitHandler,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"name\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Enter Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"Enter Name\",\n            value: name,\n            onChange: e => setName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"email\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Enter Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"email\",\n            placeholder: \"Enter email\",\n            value: email,\n            onChange: e => setEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"isAdmin\",\n          children: /*#__PURE__*/_jsxDEV(Form.Check, {\n            type: \"checkbox\",\n            placeholder: \"Enter password\",\n            label: \"is admin\",\n            checked: isAdmin,\n            onChange: e => setIsAdmin(e.target.checked)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          style: {\n            marginTop: '20px'\n          },\n          type: \"submit\",\n          variant: \"primary\",\n          children: \"Update User\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n\n_s(UserEditScreen, \"kj5AR2mWVxkPii/t/297pEer3ZY=\", false, function () {\n  return [useDispatch, useParams, useNavigate, useSelector, useSelector];\n});\n\n_c = UserEditScreen;\nexport default UserEditScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserEditScreen\");","map":{"version":3,"names":["React","useEffect","useState","useDispatch","useSelector","Form","Button","Link","useNavigate","useParams","Loader","Messages","getUserDetails","updateUser","FormConatiner","USER_UPDATE_RESET","UserEditScreen","dispatch","params","userId","id","navigate","name","setName","email","setEmail","isAdmin","setIsAdmin","userDetails","state","loading","error","user","userUpdate","loadingUpdate","errorUpdate","success","successUpdate","type","_id","submitHandler","e","preventDefault","target","value","checked","marginTop"],"sources":["/Users/kamrankhan/Desktop/proshop/frontend/src/screens/UserEditScreen.js"],"sourcesContent":["import React, {useEffect, useState} from 'react'\nimport {useDispatch, useSelector} from 'react-redux'\nimport {Form, Button} from 'react-bootstrap'\nimport { Link, useNavigate, useParams } from 'react-router-dom'\nimport Loader from '../Components/Loader'\nimport Messages from '../Components/Messages'\nimport { getUserDetails, updateUser } from '../actions/userAction'\nimport FormConatiner from '../Components/FormConatiner'\nimport { USER_UPDATE_RESET } from '../constants/userConstants'\n\nconst UserEditScreen = () => {\n\n    const dispatch = useDispatch();\n    const params = useParams();\n    const userId = params.id\n\n    const navigate = useNavigate();\n    const [name, setName] = useState('');\n    const [email, setEmail] = useState('');\n    const [isAdmin, setIsAdmin] = useState('');\n\n    const userDetails = useSelector((state) => state.userDetails);\n    const { loading, error, user} = userDetails;\n\n    const userUpdate = useSelector((state) => state.userUpdate);\n    const { loading : loadingUpdate, error : errorUpdate, success : successUpdate} = userUpdate;\n\n\n\n    useEffect(() => {\n        if(successUpdate){\n            dispatch({ type : USER_UPDATE_RESET })\n            navigate('/admin/userlist')\n        } else {\n            if(!user.name || user._id !== userId){\n                dispatch(getUserDetails(userId))\n            } else {\n                setName(user.name);\n                setEmail(user.email);\n                setIsAdmin(user.isAdmin);\n            }\n        }\n    }, [dispatch, user, navigate, userId, successUpdate])\n    \n    const submitHandler = (e) => {\n        e.preventDefault();\n        dispatch(updateUser({_id: userId, name, email, isAdmin}))\n    }\n\n  return (\n    <>\n     <Link to='/admin/userlist' className='btn btn-dark my-3'> Back </Link>\n\n    <FormConatiner>\n        <h1>Edit User</h1>\n          {loadingUpdate && (<Loader />) }\n          { errorUpdate && (<Messages variant='danger'>{errorUpdate}</Messages>)}\n          {loading ? (<Loader />) : error ? (\n            <Messages variant='danger'>{error}</Messages>\n          ) : (\n        <Form onSubmit={submitHandler}>\n            <Form.Group controlId='name'>\n                <Form.Label>Enter Name</Form.Label>\n                <Form.Control \n                type='text' \n                placeholder='Enter Name' \n                value={name}\n                onChange={(e) => setName(e.target.value)}\n                >\n                </Form.Control>\n            </Form.Group>\n            <Form.Group controlId='email'>\n                <Form.Label>Enter Email</Form.Label>\n                <Form.Control\n                type='email'\n                placeholder='Enter email'\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n                >\n                </Form.Control>\n            </Form.Group>\n            <Form.Group controlId='isAdmin'>\n                <Form.Check\n                type='checkbox'\n                placeholder='Enter password'\n                label='is admin'\n                checked={isAdmin}\n                onChange={(e) => setIsAdmin(e.target.checked)}\n                >\n                </Form.Check>\n            </Form.Group>\n           \n            <Button style={{marginTop: '20px'}} type='submit' variant='primary'>Update User</Button>\n        </Form>\n        )}\n    </FormConatiner>\n    </>\n  )\n}\n\nexport default UserEditScreen"],"mappings":"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"},"metadata":{},"sourceType":"module"}